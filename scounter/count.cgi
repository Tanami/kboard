#!/usr/bin/perl
#画像CGIカウンタ(XBM式)▲(c)p4room(http://p4room.mda.or.jp/)
#Modified by SHIRO (http://www.kyoshin-sj.co.jp/oyama/）

$logfile = "./count.log";				#カウンタ保存用ファイル

### 数字のデータ

$width = 16;		#数字の幅(ピクセル単位)
$height = 16;		#数字の高さ(〃)
@bits = (		#数字の画像データ

# 0
  '0000000000000000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0011000110001100',
  '0011010110101100',
  '0011000110001100',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0011110110111100',
  '0011111001111100',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',

# 1
  '0000000000000000',
  '0000001111000000',
  '0000001111000000',
  '0000001111000000',
  '0000001111000000',
  '0000001111000000',
  '0000001000000000',
  '0000001111000000',
  '0000001111000000',
  '0000001111000000',
  '0000001111000000',
  '0000001111000000',
  '0000001111000000',
  '0000001111000000',
  '0000001111000000',
  '0000001111000000',

# 2
  '0000000000000000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000100000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0011110000000000',
  '0011110000000000',
  '0011110000000000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',

# 3
  '0000000000000000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000100000',
  '0000011111111100',
  '0000011111111100',
  '0000011111111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000111100',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',

# 4
  '0000000000000000',
  '0011110000111100',
  '0011110000111100',
  '0011110000111100',
  '0011110000111100',
  '0011110000111100',
  '0011110000100000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000111100',

# 5
  '0000000000000000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0011110000000000',
  '0011110000000000',
  '0010000000000000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000111100',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',

# 6
  '0000000000000000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0011110000000000',
  '0011110000000000',
  '0010000000000000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0011110000111100',
  '0011110000111100',
  '0011110000111100',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',

# 7
  '0000000000000000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000100000',
  '0000000000111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000111100',

# 8
  '0000000000000000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0011110000111100',
  '0011110000111100',
  '0011110000100000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0011110000111100',
  '0011110000111100',
  '0011110000111100',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',

# 9
  '0000000000000000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0011110000111100',
  '0011110000111100',
  '0011110000100000',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
  '0000000000111100',
  '0000000000111100',
  '0000000000111100',
  '0011111111111100',
  '0011111111111100',
  '0011111111111100',
);

### カウント処理

@urls = (				#アクセスを無視したいリンク元URL
  "hogehoge.net",			#カンマで区切って複数指定可能
  "oyama/page1",			#例："yahoo.co.jp",
);
$logfile = "./count.log";		#カウンタ保存用ファイル
$aclogfile ="./access.log";		#アクセス記録用ファイル
$addr      = $ENV{'REMOTE_ADDR'};	#来訪者のホストアドレス
$referer   = $ENV{'HTTP_REFERER'};	#リンク元URL
$keep      = 20;			#アクセス記録の保存期間（秒）
$now       = time;			#現在の時刻

open(FILE,"+<$aclogfile");		#アクセスログを開く
flock(FILE,2);				#ロックする
@logs = <FILE>;				#配列にアクセス記録を読み込む
@logs = grep($_ > $now - $keep, @logs); #$keep秒以内の新アクセス記録のみ残す
seek(FILE,0,0);				#ファイルポインタを先頭に
print FILE "$now\t$addr\n";		#今回のアクセス記録を書き込む
print FILE @logs;			#@logsを書き込む
truncate(FILE, tell);			#余分なデータを切り詰める
close(FILE);				#クローズ

open(FILE,"+<$logfile");		
flock(FILE,2);
chop($count = <FILE>);			#カウンタを読み込む
if (&from_outside()) {			#外部からのアクセスであり、
  if (&is_newcomer()) {			#新規訪問者によるアクセスなら
    $count++;				#カウンタを+1する
    seek(FILE,0,0);			#ファイルポインタを先頭に戻す
    print FILE "$count\n";		#カウンタをファイルに書き出す
  }
}
flock(FILE,8);				#ロック解除
close(FILE);				#クローズ

$count = sprintf("%05d", $count);		#最低5桁に整形する
@suuji = split(//, $count);			#個々の数字に分割

### 画像イメージ作成

$width *= @suuji;				#カウンタ全体の幅を算出
$keta = int(($width + 7) / 8) * 2;		#画像１ラインの16進桁数を算出

$image = "#define the_width $width\n";		#幅
$image .= "#define the_height $height\n";	#高さ
$image .= "static char the_bits[] = {\n";
for ($y = 0; $y < $height; $y++) {		#1ラインごとに
  $line = "";
  foreach $n (@suuji) {				#各数字のデータを
    $line .= $bits[$n * $height + $y];		#$lineに追加
  }
  $line = pack("b$width", $line);		#2進文字列→内部表現の変換
  $line = unpack("H$keta", $line);		#内部表現→16進文字列の変換
  $line =~ s/(..)/0x$1,/g;			#2桁ずつ"0x"を付ける
  $image .= "$line\n";				#ラインを出力データに追加
}
$image .= "};\n";				#データ作成終了

### 画像イメージを出力

$date = &gmt_date(time);			#現在の時刻を
print "Last-Modified: $date\n";			#更新時刻として出力
print "Expires: 0\n";				#有効期限は0 (キャッシュなし)
print "Content-Type: image/x-xbitmap\n\n";	#XBM画像のHTTPヘッダ出力
print $image;					#画像データを出力

exit;						#スクリプト終了

### 以下サブルーチン

sub from_outside {			#外部からのアクセスかどうかチェック
  foreach $url (@urls){
	  if ($referer =~ /$url/) {	#自分のページからのアクセスなら
	    return 0;			#0を返す
	  }
  }
  return 1;				#そうでなければ外部からのアクセス
}

sub is_newcomer {			#新規アクセスかどうかチェック
  foreach $line (@logs){		#$keep秒以内の全記録を調べる
	chop($line);
	($t, $a) = split(/\t/, $line);	#時刻とホストアドレスに分割
	if ($addr eq $a) {		#同じホストからのアクセス記録があれば０を返す
		return 0;
	}
  }
  return 1;				#そうでなければ1を返す
}

sub gmt_date {					#時刻をGMT表記で得る
  local($t) = @_;
  @wdays = ("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat");
  @month = ("Jan", "Feb", "Mar", "Apr", "May", "Jun",
            "Jul", "Aug", "Sep", "Oct", "Nov", "Dec");
  ($sec, $min, $hour, $day, $mon, $year, $wday) = gmtime($t);
  return sprintf("%s, %02d %s %04d %02d:%02d:%02d GMT",
           $wdays[$wday], $day, $month[$mon], $year+1900, $hour, $min, $sec);
}
